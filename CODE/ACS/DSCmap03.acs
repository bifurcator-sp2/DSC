#import "DSCLIB01.acs"

/**
 * @name DSCMAP03
 * @title Bloodrain Plaza
 * 
 */

#define NO_SKULL        999999
#define NO_WEAPON       999999
#define NEXT_ZONE       888888

int MapWave             = 0;
int MsgID               = 13131313;
int ttlID               = 13131314;
str finalText           = "";
bool DoorOut1Closed     = false;
bool ArmorTook          = false;
bool SecondZoneClosed   = false;
bool ItemTook           = false;

script "StartControl" enter {
    
    maxWaveCount = 40; //episode wave count definition
    ACS_NamedExecute("DisplayInfo", 0);
    
    Thing_Deactivate(100);
    PlaySound(1, "world/BFRAIN", CHAN_BODY, 1.0, TRUE, ATTN_NONE);
    ACS_NamedExecute("CreepySounds",0);
    //ACS_NamedExecute("DemoMap", 0, 2200);//test thing
    //ACS_NamedExecute("OpenSecondZone",0);// test
    
    while ( !NextWaveReady ){ delay(1); } // first skull taken
    
    // Wave 1
    //
    NextWaveReady = false;
    ACS_NamedExecuteAlways("Mus_L1", 0);
    ACS_NamedExecuteAlways("SpawnWave", 0, 100500, NO_SKULL, 100401);

    delay(5);
    
    while (WaveOnline){ delay(1); }
    
    // Wave 2
    //
    NextWaveReady = false;
    ACS_NamedExecuteAlways("WaveSlideDoor", 0, 1, 120, 192);
    ACS_NamedExecuteAlways("WaveSlideDoor", 0, 2, 120, 192);
    ACS_NamedExecuteAlways("Mus_L1", 0);
    ACS_NamedExecuteAlways("SpawnWave", 0, 100501, NO_SKULL, 100401);
    
    delay(5);
    
    while (WaveOnline){ delay(1); }
    
    // Wave 3
    //
    NextWaveReady = false;
    ACS_NamedExecuteAlways("Mus_L1", 0);
    //ACS_NamedExecuteAlways("WaveSlideDoor", 0, 3, 120, 0);
    ACS_NamedExecuteAlways("WaveSlideDoor", 0, 4, 120, 0);
    // @TODO: add localization support
    PrintBold(s:"Southern door\nhas been opened");
    ACS_NamedExecuteAlways("SpawnWave", 0, 100506, 3, 100402);

    while ( !NextWaveReady ){ delay(1); }
    
    NextWaveReady = false;
    ACS_NamedExecuteAlways("Mus_M1", 0);
    ACS_NamedExecuteAlways("SpawnWave", 0, 100504, 3, 100402);

    while ( !NextWaveReady ){ delay(1); }
    
    NextWaveReady = false;
    ACS_NamedExecuteAlways("Mus_M2", 0);
    ACS_NamedExecuteAlways("SpawnWave", 0, 100503, 3, 100402);

    while ( !NextWaveReady ){ delay(1); }
    
    NextWaveReady = false;
    ACS_NamedExecuteAlways("Mus_M3", 0);
    ACS_NamedExecuteAlways("SpawnWave", 0, 100503, 999999, 999999); //notag
    ACS_NamedExecuteAlways("SpawnWave", 0, 100504, 3, 100402);

    while ( !NextWaveReady ){ delay(1); }
    
    NextWaveReady = false;

    delay(35);
    ACS_NamedExecuteAlways("OpenSecondZone", 0);
    ACS_NamedExecuteAlways("SpawnWave", 0, 100509, 4, 100403); //notag

    while ( !NextWaveReady ){ delay(1); }
    
    NextWaveReady = false;

    ACS_NamedExecuteAlways("Mus_G1", 0);
    ACS_NamedExecuteAlways("SpawnWave", 0, 100509, 4, 100403);
    
    delay(35*30);
    //delay(1);while(WaveOnline){delay(1);}
    //PrintBold(s:"next");
    ACS_NamedExecuteAlways("SpawnWave", 0, 100508, 888888, 888888); //notag

    while ( !NextWaveReady ){ delay(1); }
    
    NextWaveReady = false;
    ACS_NamedExecuteAlways("Mus_G2", 0);
    ACS_NamedExecuteAlways("SpawnWave", 0, 100507, 4, 100403);

    while ( !NextWaveReady ){ delay(1); }
    NextWaveReady = false;

    LastWave = true;
    PrintBold(s: "Go to central chamber\nand finish the challenge");
    
    delay(35*5);
    ACS_NamedExecuteAlways("Mus_G2", 0);
    ACS_NamedExecuteAlways("SpawnWave", 0, 100511, 2, 100401);

    Door_Open (30, 16);
    ACS_NamedExecuteAlways("WaveSlideDoor", 0, 3, 120, 0);

    while ( !NextWaveReady ){ delay(1); }
    
    NextWaveReady = false;

    for ( int i = 5; i > 0; i-- ){
        
        ACS_NamedExecute("LevelEndingMessage", 0, i);
        delay(35);
    }
    
    GiveInventory("map03done", 1);
    TotalKills = TotalKills + GetLevelInfo (LEVELINFO_KILLED_MONSTERS);
    Atrium1Active = true;
    Exit_Normal(0);
}

script "SpawnFirstScull" (void){
    
    SpawnSpotFacingForced("WaveScullDEC", 2, 100600);
    SetThingSpecial(100600, ACS_NamedExecute, "NextWaveReady");
}

script "ArmorWave" (void){
    
    if ( !ArmorTook ){
        
        ArmorTook = true;
        ACS_NamedExecuteAlways("SpawnWave", 0, 100505, 888888, 888888); //notag
    }
}

script "CloseSecondZone" (void){ // disabled
    /*
    if ( !SecondZoneClosed ){
    
        TagWait(23);
        SecondZoneClosed = true;
        Door_Close(28, 16);
        Door_Close(22, 16);
        ceiling_raisebyvalue(23, 4, 128);
        //world/WaterOut
        PlaySound(27, "world/WaterOut", CHAN_BODY, 1.0, false, ATTN_NORM);
    }
    */
}

script "Covenant" (void) {

    str CovenantTitle = StrParam(l:"TABLET_PLAZA_TITLE");
    str CovenantText = StrParam(l:"TABLET_PLAZA");
    
    SetHudSize(500, 350, 0);
    SetFont ("BIGFONT");
    HudMessage(s:CovenantTitle;HUDMSG_PLAIN,ttlID,CR_YELLOW, 250.0, 100.0, 0.1);
    
    SetFont ("SMALLFONT");
    HudMessage(s:CovenantText;HUDMSG_PLAIN,MsgID,CR_GRAY, 250.0, 200.0, 0.1);
    hudmessageBold(s:"Press any key to continue"; HUDMSG_PLAIN , 0, CR_RED, 250.0, 330.0, 0.1);
}

script "ItemWave" (void){
	
    if ( !ItemTook ){
        
        ItemTook = true;
        ACS_NamedExecuteAlways("SpawnWave", 0, 100510, 888888, 888888); //notag
    }
}

script "DoorOut1Close"(void){ // disabled
    /*
    if ( !DoorOut1Closed ){
        //ACS_NamedExecuteAlways("WaveSlideDoor", 0, 4, 120, 128);
        Floor_RaiseByValue(24, 32, 128);
        DoorOut1Closed = true;
        Door_Close(29, 64);
        Door_Close(30, 64);
    }
     */
}

script "MapWaveControll" (void){
    
    MapWave++;
}

script "OpenSecondZone" (void){
    
    delay(35 * 3);
    // @TODO: add localization support
    PrintBold(s:"Hidden passage has been opened");
    Door_Open(26, 16);
    Door_Open(28, 16);
    ceiling_lowerbyvalue(23, 4, 128);
    PlaySound(27, "world/WaterOut", CHAN_BODY, 1.0, false, ATTN_NORM); //world/WaterOut
}

script "WaveSlideDoor" (int pilyID, int dist, int angle){
    
    if ( !dist ){ dist = 128; }

    Polyobj_DoorSlide(pilyID, 16, angle, dist, -1);
    SoundSequenceOnPolyobj(pilyID, "DoorHell");
}