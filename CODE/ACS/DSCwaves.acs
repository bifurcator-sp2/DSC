//////////////LIBRARY

global int 1:AmmoMaxRnd;
global int 2:WeaponGotID;
global int 3:CurrentWave;
global int 4:TotalKills;
global BOOL 5:Atrium1Active;
global int 6:MonsterCountMethod;
global int 7:DSCplayerRank;
global str 8:DSCplayerAbilities;

#define shotGunSpawnProgressInPercent 3
#define SSGSpawnProgressInPercent 15
#define ChaingunSpawnProgressInPercent 30
#define RLSpawnProgressInPercent 50
#define PlasmaGunSpawnProgressInPercent 70
#define BFG9000SpawnProgressInPercent 80

#define maxWaveCount 40
bool isBE = false;
Bool NextWaveReady = false;
Bool WaveOnline = false;
Bool IgnoreWaveMusicChange = false;
int SpawnedMonstersOnTheMap = 0;
int DSCscreenFade = 0;//for DSCranks
bool waitForWeaponSpawnedMassage = false;
bool waitForScullSpawnedMassage = false;

bool NOspawn = false; //dev staff


int SaintHealthUpMultipler = 0; //current health up for Zscript for DSCprisonedSaint
int SaintHealthUpBaseAmount = 10;//basic value for SaintHealthUp DSCprisonedSaint
//








Script "GetAmmoSlot" (void)
{
	SetResultValue(Random(0,AmmoMaxRnd));
}
Script "GetWeaponGotID" (void)
{
	SetResultValue(WeaponGotID);
}
Script "GetProgress" (void)
{
	SetResultValue((currentWave * 100) / maxWaveCount);
}

Script "GetLiveMonstersCount" (void)
{
	SetResultValue(SpawnedMonstersOnTheMap);
}


Script "NewMonsterIsSpawned" (int monstersCount)
{
	SpawnedMonstersOnTheMap = monstersCount;
}

function bool BEorvanilla (void){
	if (CheckActorClass(0, "BEDoomer") || CheckActorClass(0, "BESemiDoomer") || CheckActorClass(0, "DoomPlayer")){
		return true;
	}
	return false;
}
function bool BE (void){
	if (isBE){
		return true;
	}
	return false;
}
Script "BE" (void)
{
	if (isBE){
		SetResultValue(true);
		terminate;
	}
	SetResultValue(false);
}

function int GetTotalMonsters(void)
{

	if (!BEorvanilla()){
		return SpawnedMonstersOnTheMap;
	}
	return ThingCount(T_NONE, 666666);
}




Script "DisplayInfo" ENTER
{
	if (CheckActorClass(0, "BEDoomer") || CheckActorClass(0, "BESemiDoomer")){
		isBE = true;
	} else { isBE = false; }

	while (TRUE) {
		int mtotal = GetTotalMonsters();
		int progress = (currentWave * 100) / maxWaveCount;

		SetFont("SMALLFONT");

		HudMessage(
		d:mtotal, s:" demons on map";
		HUDMSG_PLAIN,779,CR_DARKBROWN,0.2,0.039,1,0);

		HudMessage(
		d:progress, s:"%", s:" progress";
		HUDMSG_PLAIN,780,CR_DARKBROWN,0.8,0.039,1,0);
		Delay(35);
	}
}
//TotalKills

script "SpawnWave" (int zoneTid, int ScullTag, int WeaponTag)
{

		if( ScullTag != 888888 ){
			WaveOnline = true;
			if(!NOspawn){//debug thing
				Delay(35*3);
				AmbientSound("Howling",127);
				Delay(35*3);

				for(int i = 5; i > 0; i--)
				{
					Print(s:"Wave will come in ",d:i,s:" seconds");
					Delay(35);
				}
			}

		}
		if(!NOspawn){
			Thing_Activate(zoneTid);
		}
		if( ScullTag != 888888 ){
			if(!NOspawn){ //debug thing
				Delay(35*30);
			}

			while ( GetTotalMonsters()>0){ Delay(35); }

			PrintBold(s:"Wave ", d:CurrentWave+1,  s:" complete!");

			//ACS_NamedExecute("MapWaveControll", 0);

			CurrentWave ++;

			if(!NOspawn){//debug thing
				Delay(35*3);
			}
			Thing_Destroy(666667,0,0);//Previusly spawned vanilla weapon

			ACS_NamedExecute("SpawnWeapon", 0, WeaponTag);

			if(getRank()>DSCplayerRank){
				Delay(35*1);
				ACS_NamedExecuteAlways("DisplayNextRank", 0);
				Delay(35*2);
			}
			if(!NOspawn){//debug thing

				Delay(35*3);
			}
			ACS_NamedExecuteAlways("RestoreMusic", 0);

			SpawnSpotFacingForced("WaveScullDEC", ScullTag, 100600);

			SetThingSpecial(100600, ACS_NamedExecute, "NextWaveReady");

			WaveOnline = false;

		}
}

script "NextWaveReady" (void)
{

	NextWaveReady = true;
}





script "SpawnWeapon" (int WeaponTag)
{
	if(!WeaponTag){WeaponTag = 100400; }
	int progression = (currentWave * 100) / maxWaveCount ;
	//PrintBold(s:"Your progress ", d:progression, s:"%");
	delay(35*2);
	while(DSCscreenFade>0){
		delay(1);
	}
	Thing_Remove(666667);
	if(progression >= shotGunSpawnProgressInPercent && WeaponGotID<1)
	{

		AmmoMaxRnd = 1;
		WeaponGotID = 1;
		PrintBold(s:"Shotgun spawned");

		//Thing_Activate(WeaponTag);
	}
	else if (progression >= SSGSpawnProgressInPercent && WeaponGotID<2)
	{

		WeaponGotID = 2;
		PrintBold(s:"SuperShotgun spawned");

		//Thing_Activate(WeaponTag);
	}
	else if (progression >= ChaingunSpawnProgressInPercent && WeaponGotID<3)
	{

		WeaponGotID = 3;
		Thing_Destroy(666667,0,0);
		PrintBold(s:"Chaingun spawned");
		//Thing_Activate(WeaponTag);
	}
	else if (progression >= RLSpawnProgressInPercent && WeaponGotID<4)
	{

		WeaponGotID = 4;
		AmmoMaxRnd = 2;
		PrintBold(s:"RocketLauncher spawned");

		//Thing_Activate(WeaponTag);
	}
	else if (progression >= PlasmaGunSpawnProgressInPercent && WeaponGotID<5)
	{

		WeaponGotID = 5;
		AmmoMaxRnd = 3;
		PrintBold(s:"PlasmaRifle spawned");

		//Thing_Activate(WeaponTag);
	}
	else if (progression >= BFG9000SpawnProgressInPercent && WeaponGotID<6)
	{

		WeaponGotID = 6;
		PrintBold(s:"BFG9000 spawned");
		//Thing_Activate(WeaponTag);
	}
	if(WeaponGotID>=1){
		Thing_Activate(WeaponTag);
	}
}


Script "ScullHasCome" (void){
	while(DSCscreenFade>0){
		delay(1);
	}
	delay(35*3);//to not intersect with weapon spawn message
	PrintBold(s:"Mystic Scull has arrived.\nPick it up for continiue.");
}


Script "Mus_G1" (void){
	if(!IgnoreWaveMusicChange){
		ACS_NamedExecuteAlways("FadeOutMusic", 0);
		Delay(100);
		SetMusic("BTTL_G1", 0);
		ACS_NamedExecuteAlways("FadeInMusic", 0);
	}
}
Script "Mus_G2" (void){
	if(!IgnoreWaveMusicChange){
		ACS_NamedExecuteAlways("FadeOutMusic", 0);
		Delay(100);
		SetMusic("BTTL_G2", 0);
		ACS_NamedExecuteAlways("FadeInMusic", 0);
	}
}
Script "Mus_G3" (void){
	if(!IgnoreWaveMusicChange){
		ACS_NamedExecuteAlways("FadeOutMusic", 0);
		Delay(100);
		SetMusic("BTTL_G3", 0);
		ACS_NamedExecuteAlways("FadeInMusic", 0);
	}
}
Script "Mus_L1" (void){
	if(!IgnoreWaveMusicChange){
		ACS_NamedExecuteAlways("FadeOutMusic", 0);
		Delay(100);
		SetMusic("BTTL_L1", 0);
		ACS_NamedExecuteAlways("FadeInMusic", 0);
	}
}
Script "Mus_M1" (void){
	if(!IgnoreWaveMusicChange){
		ACS_NamedExecuteAlways("FadeOutMusic", 0);
		Delay(100);
		SetMusic("BTTL_M1", 0);
		ACS_NamedExecuteAlways("FadeInMusic", 0);
	}
}
Script "Mus_M2" (void){
	if(!IgnoreWaveMusicChange){
		ACS_NamedExecuteAlways("FadeOutMusic", 0);
		Delay(100);
		SetMusic("BTTL_M2", 0);
		ACS_NamedExecuteAlways("FadeInMusic", 0);
	}
}
Script "Mus_M3" (void){
	if(!IgnoreWaveMusicChange){
		ACS_NamedExecuteAlways("FadeOutMusic", 0);
		Delay(100);
		SetMusic("BTTL_M3", 0);
		ACS_NamedExecuteAlways("FadeInMusic", 0);
	}
}
Script "Mus_TITLEMAP" (void){
	if(!IgnoreWaveMusicChange){
		ACS_NamedExecuteAlways("FadeOutMusic", 0);
		Delay(100);
		SetMusic("MAINTTL", 0);
		ACS_NamedExecuteAlways("FadeInMusic", 0);
	}
}
Script "RestoreMusic" (void){
	if(!IgnoreWaveMusicChange){
		ACS_NamedExecuteAlways("FadeOutMusic", 0);
		Delay(100);
		SetMusic("*", 0);
		ACS_NamedExecuteAlways("FadeInMusic", 0);
	}
}


//END LIBRARY
