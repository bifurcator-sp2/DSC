#include "F:\Games\gzdoom\mywads\DSC\DSC.git\DSC\CODE\ACS\DSCcommon.acs"
#include "F:\Games\gzdoom\mywads\DSC\DSC.git\DSC\CODE\ACS\DSCwaves.acs"
#include "F:\Games\gzdoom\mywads\DSC\DSC.git\DSC\CODE\ACS\DSCranks.acs"

bool DeadPoolHelped;


script "StartControl" ENTER
{

	Thing_Deactivate(100);
//TEST!

//NOspawn = true;
/*DSCplayerRank = 7;
CurrentWave = 100;
AmmoMaxRnd = 3;
WeaponGotID = 5;
*/

bool inDEV = false;
//TEST!
	if(inDEV){

		//GiveInventory("map07done", 1);
		/*
		Thing_Activate(107);
		GiveInventory("map03done", 1);
		Thing_Activate(108);
		GiveInventory("map04done", 1);
		Thing_Activate(109);
		GiveInventory("map05done", 1);
		Thing_Activate(110);
		currentWave = 200;*/
	}

	if(CheckInventory("map07done")>0){
		//activation of atrium vaves & normalize and normalize way to first map
		//Door10Locked = false;
		//Thing_Activate(107);
		ACS_NamedExecuteAlways("SpawnWave", 0, 100505, 888888, 888888); //notag nocount
		Thing_Activate(106);
	}

	/*if(CheckInventory("map09done")>0){
		int progression = (currentWave * 100) / maxWaveCount ;
		if(progression>150){
			SpawnSpotFacingForced("DSCportalToMap", 200, 201);
			SetThingSpecial(201, ACS_NamedExecute, "GotoMinistry");
			Thing_Activate(110);
		} else {
			Thing_Activate(111);
		}
	}*/

	//ACS_NamedExecute("StartHelp", 0);

	if(Atrium1Active){

	}
	//CheckInventory("map02done");

}

script "ActivadeDeadPoolHelper"(void){
	if(CheckInventory("map07done")==0){
		if(!DeadPoolHelped){
			DeadPoolHelped = true;
			Thing_Activate(201);
			SpawnSpotFacingForced("DSCportalToMap", 202, 203);
			SetThingSpecial(203, ACS_NamedExecute, "GotoDeadPool_clearinventory");
		}
	} else {
		if(!DeadPoolHelped){
			DeadPoolHelped = true;
			SpawnSpotFacingForced("DSCportalToMap", 202, 203);
			SetThingSpecial(203, ACS_NamedExecute, "GotoDeadPool");
			Floor_RaiseByValue(44, 8, 230);
			Thing_Activate(204);
		}
	}
}


Script "SatartFirstWave" (void){

	if(CheckInventory("map06done")==0){

		ACS_NamedExecuteAlways("Mus_M2", 0);
		ACS_NamedExecuteAlways("SpawnWave", 0, 100500, 999999, 100400);
		Delay(5);
		while(WaveOnline){ Delay(5);}
		ACS_NamedExecuteAlways("Mus_M2", 0);
		ACS_NamedExecuteAlways("SpawnWave", 0, 100501, 999999, 100400);
		Delay(5);
		while(WaveOnline){ Delay(5);}
		ACS_NamedExecuteAlways("Mus_M3", 0);
		ACS_NamedExecuteAlways("SpawnWave", 0, 100502, 100300, 100400);
		while(!NextWaveReady){
			delay(1);
		}
		NextWaveReady = false;
		ACS_NamedExecuteAlways("Mus_G1", 0);
		ACS_NamedExecuteAlways("SpawnWave", 0, 100503, 100300, 100400);
		delay(35*20);
		ACS_NamedExecuteAlways("SpawnWave", 0, 100500, 888888, 888888);
		while(!NextWaveReady){
			delay(1);
		}
		NextWaveReady = false;
		ACS_NamedExecuteAlways("Mus_G2", 0);
		ACS_NamedExecuteAlways("SpawnWave", 0, 100501, 100300, 100400);
		delay(35*20);
		ACS_NamedExecuteAlways("SpawnWave", 0, 100502, 888888, 888888);
		while(!NextWaveReady){
			delay(1);
		}
		NextWaveReady = false;
		ACS_NamedExecuteAlways("Mus_G3", 0);
		ACS_NamedExecuteAlways("SpawnWave", 0, 100504, 100300, 100400);
		delay(35*20);
		ACS_NamedExecuteAlways("SpawnWave", 0, 100500, 888888, 888888);

		while(!NextWaveReady){
			delay(1);
		}
		NextWaveReady = false;
		delay(35*5);
		TotalKills = TotalKills + GetLevelInfo (LEVELINFO_KILLED_MONSTERS);
		Thing_Activate(300);
		ChangeCamera(300, 0, 0);

		for(int i = 0; i<=9; i++){	SoundVolume (0, i, 0.0); }
		PlaySound (0, "world/HAPPEN1" , 64, 1.0, false, ATTN_NONE);

		delay(5*35);
		Thing_DeActivate(300);
		ChangeCamera(0, 0, 0);

		for(i = 0; i<=9; i++){	SoundVolume (0, i, 1.0); }

		GiveInventory("map06done", 1);
		/*ACS_NamedExecuteAlways("Mus_TITLEMAP", 0);
		Thing_Activate(200);
		ChangeCamera(200, 0, 0);
		SetPlayerProperty(0, 1, PROP_TOTALLYFROZEN);*/
		//TODO: open gates to yard
	} else {
			SpawnSpotFacingForced("DSCportalToMap", 100300, 100301);
			SetThingSpecial(100301, ACS_NamedExecute, "GotoAtrium1");
			Thing_Activate(205);
	}
	//
}



script "openDoorToYard" (void){
	if(CheckInventory("map06done")>0){
		ACS_NamedExecuteAlways("RotateDoorLeftNoReturn", 0, 1, 8, 64);
	}
}



script "DrawHelp" (int HelpID, int Time, int NextHelpTag){

	if (Time==0){Time=3;}

	switch (HelpID) {
		case 1:
			hudmessageBold(s:"Dive into the blood pool."; HUDMSG_PLAIN, 0, CR_RED, 1.5, 0.6, Time*1.1);
			break;
		case 2:
			hudmessageBold(s:"Now you can play\n\"The bloody tide\"\nWithout reset of inventory."; HUDMSG_PLAIN, 0, CR_RED, 1.5, 0.6, Time*1.1);
			break;
		case 3:
			hudmessageBold(s:"Now you can travel\n\through played episodes."; HUDMSG_PLAIN, 0, CR_RED, 1.5, 0.6, Time*1.1);
			break;
		default:
			PrintBold(s:"Be strong!");

	}
	Delay((Time+2)*35);
	if(NextHelpTag>0){
		Thing_Activate(NextHelpTag);
	}
}

script "GotoDeadPool_clearinventory" (void){
	delay(15);
	currentWave = 0;
	ChangeLevel ("DSCMAP07", 0, CHANGELEVEL_NOINTERMISSION|CHANGELEVEL_RESETHEALTH|CHANGELEVEL_RESETINVENTORY);
	//deadpool enter script mus give to player all previous map#done items
}
script "GotoAtrium1" (void){
	delay(15);
	ChangeLevel ("DSCMAP01", 0, CHANGELEVEL_NOINTERMISSION);
}
script "GotoDeadPool" (void){
	delay(15);
	ChangeLevel ("DSCMAP07", 0, CHANGELEVEL_NOINTERMISSION);
}
script "GotoPlaza" (void){
	delay(15);
	ChangeLevel ("DSCMAP03", 0, CHANGELEVEL_NOINTERMISSION);
}
script "GotoArena" (void){
	delay(15);
	ChangeLevel ("DSCMAP04", 0, CHANGELEVEL_NOINTERMISSION);
}
script "GotoSalvation" (void){
	delay(15);
	ChangeLevel ("DSCMAP05", 0, CHANGELEVEL_NOINTERMISSION);
}
script "GotoMinistry" (void){
	delay(15);
	ChangeLevel ("DSCMAP06", 0, CHANGELEVEL_NOINTERMISSION);
}

/*
SCRIPT "Door10" (void){
	if(!Door10Locked){
		Generic_Door(10, 16, 0, 34, 0);
	}
}
SCRIPT "Door11" (void){
	if(!Door11Locked){
		Generic_Door(11, 16, 0, 34, 0);
	}
}
SCRIPT "Door12" (void){
	if(!Door12Locked){
		Generic_Door(12, 16, 0, 34, 0);
	}
}
*/